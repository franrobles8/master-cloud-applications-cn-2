AWSTemplateFormatVersion: 2010-09-09
Description: Stack for EC2 and RDS

Parameters:
  AMIEC2Id:
    Description: AMI Id for EC2 Instance
    Type:  AWS::EC2::Image::Id
    Default: ami-06fd78dc2f0b69910 # Ubuntu 18.04 eu-west-1
  DBPassword:
    Description: Password for RDS MySQL Database
    Type: String
    NoEcho: true
    MinLength: 8
  BucketName:
    Description: S3 Bucket that will be use by the app
    Type: String
  AppDownloadURL:
    Description: URL that will be used to download the JAR file
    Type: String
    Default: https://s3.amazonaws.com/practica-2.cloud.michel/app.jar
  KeyPairName:
    Description: Key pair to use in EC2 instance
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  rdsDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: "db.t2.micro"
      AllocatedStorage: 10
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      DBInstanceIdentifier: prac2-cloudformation-instance
      DBName: prac2CloudformationDB
      Engine: mysql
      EngineVersion: 8.0.20
      MasterUsername: prac2user
      MasterUserPassword: !Ref DBPassword
      MultiAZ: false
      PubliclyAccessible: true
      StorageEncrypted: false
      VPCSecurityGroups:
        - !GetAtt rdsSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: RDS DB instance for practice 2

  rdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group for MySQL RDS access from EC2"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupName: !Ref ec2SecurityGroup

  myEC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: rdsDBInstance
    Properties:
      ImageId: !Ref AMIEC2Id 
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      Monitoring: true
      IamInstanceProfile:
        !Ref CustomInstanceProfile
      SecurityGroups:
        - !Ref ec2SecurityGroup
      UserData:
        Fn::Base64: 
          Fn::Sub: 
            - |
              #!/bin/bash -ex
              apt-get update && apt-get install -y openjdk-11-jre-headless
              wget https://s3.amazonaws.com/practica-2.cloud.michel/app.jar
              export RDS_USER=prac2user
              export RDS_PASS=${DBPass}
              export RDS_ENDPOINT=${DBEndpoint}
              export RDS_DATABASE=prac2CloudformationDB
              export BUCKET_NAME=${BucketName}
              export REGION=${AWSRegion}
              java -jar app.jar \
                --spring.profiles.active=production
            - DBPass: !Ref DBPassword
              DBEndpoint: !GetAtt rdsDBInstance.Endpoint.Address
              AWSRegion: !Ref "AWS::Region"
            
      Tags:
        - Key: Name
          Value: EC2 instance for practice 2
  
  ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: spring-8080-8443
      GroupDescription: "Security Group with egress ports 8080 & 8443"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  CustomRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: "s3:*"
          Resource: "*"
        - Effect: Allow
          Action: "rds:*"
          Resource: "arn:aws:rds:*:*:*"
      Roles:
      - !Ref CustomRole

  CustomInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref CustomRole

Outputs:
  AppURL:
    Value:
      !Join
        - ''
        - - "https://"
          - !GetAtt myEC2Instance.PublicDnsName
          - ":8443/"
    Description: "Practice 2 endpoint"